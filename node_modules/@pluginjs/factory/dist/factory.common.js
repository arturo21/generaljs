/*!
 * @pluginjs/factory v0.7.16 (https://pluginjs.com)
 * Copyright 2019 Creation Studio Limited
 * Released under the GPL-3.0 License.
 */
'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Emitter = _interopDefault(require('@pluginjs/emitter'));
var utils = require('@pluginjs/utils');

if (!window.Pj) {
  var plugins = {};
  window.Pj = {
    emitter: new Emitter(),

    register(name, plugin) {
      plugins[name] = plugin;
    },

    get(name) {
      if (this.has(name)) {
        return plugins[name];
      }

      return null;
    },

    has(name) {
      if (typeof plugins[name] !== 'undefined') {
        return true;
      }

      return false;
    },

    reset() {
      plugins = {};
    },

    ready(func) {
      Pj.emitter.on('ready', func);
    }

  };
}

var Pj = window.Pj;

function globalResizeHandle(e) {
  Pj.emitter.emit('resize', e, window.document.documentElement.clientWidth, window.document.documentElement.clientHeight);
}

function globalScrollHanle(e) {
  var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
  var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;
  Pj.emitter.emit('scroll', e, scrollTop, scrollLeft);
}

function globalReadyHanle() {
  Pj.emitter.emit('ready');
}

window.addEventListener('DOMContentLoaded', globalReadyHanle);
window.addEventListener('orientationchange', globalResizeHandle);
window.addEventListener('resize', utils.throttle(globalResizeHandle));
window.addEventListener('scroll', utils.throttle(globalScrollHanle));

module.exports = Pj;
