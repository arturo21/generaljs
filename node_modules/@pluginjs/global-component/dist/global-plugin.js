/*!
 * @pluginjs/global-component v0.7.15 (https://pluginjs.com)
 * Copyright 2019 Creation Studio Limited
 * Released under the GPL-3.0 License.
 */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@pluginjs/component')) :
  typeof define === 'function' && define.amd ? define(['@pluginjs/component'], factory) :
  (global = global || self, global['@pluginjs/global-component'] = factory(global['@pluginjs/component']));
}(this, function (Component) { 'use strict';

  Component = Component && Component.hasOwnProperty('default') ? Component['default'] : Component;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  var GlobalComponent =
  /*#__PURE__*/
  function (_Component) {
    _inherits(GlobalComponent, _Component);

    function GlobalComponent() {
      _classCallCheck(this, GlobalComponent);

      return _possibleConstructorReturn(this, _getPrototypeOf(GlobalComponent).call(this, window.document.documentElement));
    }

    return GlobalComponent;
  }(Component);

  return GlobalComponent;

}));
